# pth test script
#
# This file is a test script for pth (Polyglot Test Harness). It
# conforms to the following grammar.
#
#      ScriptFile   ::= CompilerTest+
#      CompilerTest ::= ExtClassName ["CmdLineArgs"] { FileTest [; FileTest]* }
#                    |  javac ["CmdLineArgs"] { FileTestNoFailure [; FileTestNoFailure]* }
#      FileTest     ::= Filenames [Description] [FailureSet]
#      FileTestNoFailure ::= Filenames [Description]
#      Filenames    ::= Filename [Filename]*
#      Description  ::= LitString
#      FailureSet   ::= Failure [, Failure]*
#      Failure      ::= ( ErrorKind )
#                    |  ( ErrorKind, "RegExp" )
#                    |  ( "RegExp" )
#                    |  ( )
#      ErrorKind    :   one of, or a unique prefix of one of the following 
#                       strings: "Warning", "Internal Error", "I/O Error", 
#                       "Lexical Error", "Syntax Error", "Semantic Error"
#                       or "Post-compiler Error".
#      Filename     :   the name of a file. Is interpreted from the 
#                       directory where pth is run.
#      LitString    :   a literal string, enclosed in quotes.
#      RegExp       :   a regular expression, as in java.util.regex; 
#                       is always enclosed in quotes.
#      CmdLineArgs  :   additional command line args for the Polyglot 
#                       compiler; is always enclosed in quotes.

# Compile some java classes first
#javac "-d java-out -cp ." {
#}
 
polyglot.ext.jl8.JL8ExtensionInfo "-d out -classpath java-out -assert -noserial -postopts \"-source 1.8 -Xlint\\:-options\" -morepermissiveinference" {
	InterfStaticMethod01.jl8;
	InterfStaticMethod02.jl8;
	InterfStaticMethod03.jl8;
	InterfStaticMethod04.jl8 (Semantic, "Method .* not found");
	InterfStaticMethod05.jl8 (Semantic, "Method void cannot declare abstract with static");
	InterfStaticMethod06.jl8;
	InterfStaticMethod07.jl8 (Semantic, "Method .* cannot access a non-static");
	InterfStaticMethod08.jl8 (Semantic, "Method .* duplicate");
	InterfStaticMethod09.jl8 (Semantic, "Method .* declared many static method");
	
}
